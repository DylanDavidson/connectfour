// Generated by CoffeeScript 1.10.0
(function() {
  this.timeout = function(time, method) {
    return setTimeout(method, time);
  };

  this.game = null;

  this.onload = function() {
    this.game = new Game();
    return this.render();
  };

  this.render = function() {
    this.game.render();
    return requestAnimationFrame(window.render);
  };

  this.Game = (function() {
    Game.prototype.column_heights = [0, 0, 0, 0, 0, 0, 0];

    function Game() {
      this.base = new Base();
      this.controller = new Controller(this);
      this.floor = new Box(this, 100, 100, 10);
      this.board = new Board(this);
      this.setupPlaceholderPieces();
    }

    Game.prototype.setupPlaceholderPieces = function() {
      var i, j, piece, results;
      this.placeholders = [];
      results = [];
      for (i = j = 0; j <= 6; i = ++j) {
        piece = new Piece(this);
        piece.stop();
        piece.setColor(0xecf0f1);
        piece.setOpacity(0.2);
        piece.setPosition(this.board.COLUMNS[i], 0, 75);
        piece.setName('Placeholder');
        results.push(this.placeholders.push(piece));
      }
      return results;
    };

    Game.prototype.place = function(column) {
      var row;
      this.piece = new Piece(this);
      row = this.column_heights[column]++;
      return this.piece.place(row, column);
    };

    Game.prototype.render = function() {
      this.controller.update();
      return this.base.render();
    };

    Game.prototype.addToScene = function(object) {
      return this.base.addToScene(object);
    };

    Game.prototype.removeFromScene = function(object) {
      return this.base.removeFromScene(object);
    };

    return Game;

  })();

}).call(this);
